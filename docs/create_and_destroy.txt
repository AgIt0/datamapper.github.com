---
title:      Create, Update, Save and Destroy
body_id:    docs
created_at: Tue Dec 04 14:46:32 +1030 2007
filter:
  - erb
  - textile
---

h1. <%= @page.title %>

To illustrate the various methods used in manipulating records, we'll create, save and destroy a record.

<% coderay(:lang => "ruby", :line_numbers => "inline") do -%>
class Zoo
  include DataMapper::Resource
  property :id,           Integer,  :serial => true
  property :name,         String
  property :description,  Text
  property :inception,    DateTime
  property :open,         Boolean,  :default => false
end
<% end %>

h2. Creating

Let's create a new instance of the model, update its properties and save it to the data store. Save will return true if the save succeeds, or false when something went wrong.

<% coderay(:lang => "ruby", :line_numbers => "inline") do -%>
zoo = Zoo.new
zoo.attributes = {:name => 'The Glue Factory', :inception => Time.now}
zoo.save
<% end %>

Pretty straight forward. In this example we've updated the attributes using the @#attributes=@ method, but there are multiple ways of setting the values of a model's properties.

<% coderay(:lang => "ruby", :line_numbers => "inline") do -%>
zoo = Zoo.new(:name => 'Awesome Town Zoo')                # Pass in a hash to the new method
zoo.name = 'Dodgy Town Zoo'                               # Set individual property
zoo.attributes = {:name => 'No Fun Zoo', :open => false}  # Set multiple properties at once
<% end %>

You can also update a model's properties and save it with one method call. @#update_attributes@ will return true if the record saves, false if the save fails, exactly like the @#save@ method.

<% coderay(:lang => "ruby", :line_numbers => "inline") do -%>
zoo.update_attributes(:name => 'Funky Town Municipal Zoo')
<% end %>


h2. Destroy

To destroy a record, you simply call it's @#destroy!@ method. It will return true or false depending if the record is successfully deleted. Here is an example of finding an existing record then destroying it.

<% coderay(:lang => "ruby", :line_numbers => "inline") do -%>
zoo = Zoo[5]
zoo.destroy! #=> true
<% end %>
